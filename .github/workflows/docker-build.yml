name: Docker Build and Push

on:
  push:
    branches:
      - main
    # Optional: Trigger on tags as well if you want to push tagged releases
    # tags:
    #   - 'v*.*.*'
  pull_request:
    branches:
      - main

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read # Needed for checkout
      packages: write # Needed to push to GHCR
      id-token: write # Needed for provenance attestations

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta # Give this step an ID to reference its outputs
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }} # Use github.repository for owner/repo
          tags: |
            # tag sha for specific commit reference
            type=sha
            # tag latest for default branch
            type=raw,value=latest,enable={{is_default_branch}}
            # Optional: tag based on git tag if you push git tags (e.g., v1.0.0)
            # type=ref,event=tag

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx # Give this step an ID if you need to reference the builder instance
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          # Only push on pushes to the main branch (not PRs)
          # Or if you uncommented the tag trigger above, it would also push on tag events
          push: ${{ github.event_name == 'push' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha # Enable cache read from GitHub Actions cache
          cache-to: type=gha,mode=max # Enable cache write to GitHub Actions cache (mode=max is recommended)
          provenance: true # Generate SLSA provenance attestation

      # Optional: Add a step here to output the image digest or other info if needed
      # - name: Print image digest
      #   if: steps.build-and-push.outputs.digest
      #   run: echo "Image digest: ${{ steps.build-and-push.outputs.digest }}"