[{"path":"https://nptscot.github.io/osmactive/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Robin Lovelace Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://nptscot.github.io/osmactive/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"First Last. Author, maintainer.","code":""},{"path":"https://nptscot.github.io/osmactive/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Last F (2024). osmactive: Package (One Line, Title Case). R package version 0.0.0.9000, https://nptscot.github.io/osmactive/.","code":"@Manual{,   title = {osmactive: What the Package Does (One Line, Title Case)},   author = {First Last},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://nptscot.github.io/osmactive/}, }"},{"path":"https://nptscot.github.io/osmactive/index.html","id":"osmactive","dir":"","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"goal osmactive provide functions, example datasets documentation extracting active travel infrastructure OpenStreetMap data. Install package :","code":"remotes::install_github(\"nptscot/osmactive\") library(osmactive)"},{"path":"https://nptscot.github.io/osmactive/index.html","id":"leeds-example","dir":"","previous_headings":"","what":"Leeds example","title":"What the Package Does (One Line, Title Case)","text":"","code":"library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(tmap) #>  #> Attaching package: 'tmap' #> The following object is masked from 'package:datasets': #>  #>     rivers leeds = zonebuilder::zb_zone(\"Leeds\") leeds = leeds |>   filter(circle_id == 1) osm = get_travel_network(\"Leeds\", boundary = leeds, boundary_type = \"clipsrc\") #> No exact match found for place = Leeds and provider = geofabrik. Best match is Laos.  #> Checking the other providers. #> An exact string match was found using provider = bbbike. #> The chosen file was already detected in the download directory. Skip downloading. #> Starting with the vectortranslate operations on the input file! #> 0...10...20...30...40...50...60...70...80...90...100 - done. #> Warning in CPL_gdalvectortranslate(source, destination, options, oo, doo, : #> GDAL Message 1: A geometry of type MULTILINESTRING is inserted into layer lines #> of geometry type LINESTRING, which is not normally allowed by the GeoPackage #> specification, but the driver will however do it. To create a conformant #> GeoPackage, if using ogr2ogr, the -nlt option can be used to override the layer #> geometry type. This warning will no longer be emitted for this combination of #> layer and feature geometry type. #> Finished the vectortranslate operations on the input file! #> Reading layer `lines' from data source `/home/robin/data/osm/bbbike_Leeds.gpkg' using driver `GPKG' #> Simple feature collection with 4163 features and 31 fields #> Geometry type: MULTILINESTRING #> Dimension:     XY #> Bounding box:  xmin: -1.558963 ymin: 53.78843 xmax: -1.528622 ymax: 53.80639 #> Geodetic CRS:  WGS 84 cycle_network = get_cycling_network(osm) driving_network = get_driving_network_major(osm) cycle_network_with_distance = distance_to_road(cycle_network, driving_network) #> Warning: st_point_on_surface assumes attributes are constant over geometries #> Warning in st_point_on_surface.sfc(st_geometry(x)): st_point_on_surface may not #> give correct results for longitude/latitude data cycle_network_classified = classify_cycleways(cycle_network_with_distance) m = plot_osm_tmap(cycle_network_classified) m tmap_save(m, \"classify_cycleways_leeds.html\") browseURL(\"classify_cycleways_leeds.html\")"},{"path":"https://nptscot.github.io/osmactive/index.html","id":"edinburgh-example","dir":"","previous_headings":"","what":"Edinburgh example","title":"What the Package Does (One Line, Title Case)","text":"Save interactive version map check results follows:","code":"edinburgh = zonebuilder::zb_zone(\"Edinburgh\") edinburgh_1km = edinburgh |>   # Change number in next line to change zone size:   filter(circle_id <= 1) osm = get_travel_network(\"Scotland\") #> The input place was matched with: Scotland #> The chosen file was already detected in the download directory. Skip downloading. #> The corresponding gpkg file was already detected. Skip vectortranslate operations. #> Reading layer `lines' from data source  #>   `/home/robin/data/osm/geofabrik_scotland-latest.gpkg' using driver `GPKG' #> Simple feature collection with 1388227 features and 31 fields #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: -20.62345 ymin: 52.69143 xmax: 9.975589 ymax: 65.36242 #> Geodetic CRS:  WGS 84 cycle_network = get_cycling_network(osm) driving_network = get_driving_network(osm) edinburgh_cycle = cycle_network[edinburgh_1km, , op = sf::st_within] edinburgh_driving = driving_network[edinburgh_1km, , op = sf::st_within] edinburgh_cycle_with_distance = distance_to_road(edinburgh_cycle, edinburgh_driving) #> Warning: st_point_on_surface assumes attributes are constant over geometries #> Warning in st_point_on_surface.sfc(st_geometry(x)): st_point_on_surface may not #> give correct results for longitude/latitude data edinburgh_segregated = classify_cycleways(edinburgh_cycle_with_distance) table(edinburgh_segregated$cycle_segregation) #>  #>        offroad_track roadside_cycle_track        mixed_traffic  #>                    6                   87                  863 m = plot_osm_tmap(edinburgh_segregated) m # tmap_save(m, \"classify_cycleways_edinburgh.html\") tmap_save(m, \"classify_cycleways_edinburgh.html\") browseURL(\"classify_cycleways_edinburgh.html\")"},{"path":"https://nptscot.github.io/osmactive/index.html","id":"lisbon-example","dir":"","previous_headings":"","what":"Lisbon example","title":"What the Package Does (One Line, Title Case)","text":"","code":"lisbon = zonebuilder::zb_zone(\"Lisbon\") lisbon = sf::st_sf(   lisbon |> sf::st_drop_geometry() |> select(-centroid),   geometry = sf::st_geometry(lisbon) ) lisbon = lisbon |>   filter(circle_id == 1) u = \"https://github.com/U-Shift/SiteSelection/releases/download/0.1/CAOP_municipios.gpkg\" f = basename(f) if (!file.exists(f)) download.file(u, f) PTcities = sf::read_sf(f) # Portugal lisbon = PTcities |> filter(Concelho == \"Lisboa\") lisbon = lisbon |>   sf::st_convex_hull() f = list.files(\"~/data/osm\", pattern = \"portugal*.+pbf\", full.names = TRUE) osm = sf::read_sf(f, query = \"select * from lines where highway is not null\") osm = get_travel_network(\"Portugal\", boundary = lisbon, boundary_type = \"clipsrc\", force_vectortranslate = TRUE) list.files(\"~/data/osm\", pattern = \"portugal\") cycle_network = get_cycling_network(osm) driving_network = get_driving_network(osm) cycle_network_with_distance = distance_to_road(cycle_network, driving_network) lisbon_categorized = classify_cycleways(cycle_network_with_distance) m = plot_osm_tmap(lisbon_categorized) m tmap_save(m, \"classify_cycleways_lisbon.html\") browseURL(\"classify_cycleways_lisbon.html\")"},{"path":"https://nptscot.github.io/osmactive/reference/classify_cycleways.html","id":null,"dir":"Reference","previous_headings":"","what":"Segregation levels — classify_cycleways","title":"Segregation levels — classify_cycleways","text":"function calculates segregation levels given dataset.","code":""},{"path":"https://nptscot.github.io/osmactive/reference/classify_cycleways.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Segregation levels — classify_cycleways","text":"","code":"classify_cycleways(cycleways, min_distance = 10)"},{"path":"https://nptscot.github.io/osmactive/reference/classify_cycleways.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Segregation levels — classify_cycleways","text":"cycleways input dataset segregation levels need calculated. min_distance minimum distance road cycleway considered -road.","code":""},{"path":"https://nptscot.github.io/osmactive/reference/classify_cycleways.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Segregation levels — classify_cycleways","text":"sf object new column cycle_segregation contains segregation levels.","code":""},{"path":"https://nptscot.github.io/osmactive/reference/distance_to_road.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate distance from route network segments to roads — distance_to_road","title":"Calculate distance from route network segments to roads — distance_to_road","text":"function approximates distance route network nearest road. first computing sf::st_point_on_surface route network segments calculating distance nearest road using geos::geos_distance function.","code":""},{"path":"https://nptscot.github.io/osmactive/reference/distance_to_road.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate distance from route network segments to roads — distance_to_road","text":"","code":"distance_to_road(rnet, roads)"},{"path":"https://nptscot.github.io/osmactive/reference/distance_to_road.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate distance from route network segments to roads — distance_to_road","text":"rnet route network distance road needs calculated. roads road network distance needs calculated.","code":""},{"path":"https://nptscot.github.io/osmactive/reference/distance_to_road.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate distance from route network segments to roads — distance_to_road","text":"sf object new column distance_to_road contains distance road.","code":""},{"path":"https://nptscot.github.io/osmactive/reference/et_active.html","id":null,"dir":"Reference","previous_headings":"","what":"This function returns OSM keys that are relevant for active travel — et_active","title":"This function returns OSM keys that are relevant for active travel — et_active","text":"function returns OSM keys relevant active travel","code":""},{"path":"https://nptscot.github.io/osmactive/reference/et_active.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function returns OSM keys that are relevant for active travel — et_active","text":"","code":"et_active()"},{"path":"https://nptscot.github.io/osmactive/reference/get_cycling_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the OSM cycling network — get_cycling_network","title":"Get the OSM cycling network — get_cycling_network","text":"Get OSM cycling network","code":""},{"path":"https://nptscot.github.io/osmactive/reference/get_cycling_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the OSM cycling network — get_cycling_network","text":"","code":"get_cycling_network(   osm,   ex_c = exclude_highway_cycling(),   ex_b = exclude_bicycle_cycling() )"},{"path":"https://nptscot.github.io/osmactive/reference/get_cycling_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the OSM cycling network — get_cycling_network","text":"osm OSM network object ex_c vector highway values exclude ex_b vector bicycle values exclude","code":""},{"path":"https://nptscot.github.io/osmactive/reference/get_cycling_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the OSM cycling network — get_cycling_network","text":"sf object OSM cycling network","code":""},{"path":"https://nptscot.github.io/osmactive/reference/get_driving_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the OSM driving network — get_driving_network","title":"Get the OSM driving network — get_driving_network","text":"function returns OSM driving network excluding certain highway values.","code":""},{"path":"https://nptscot.github.io/osmactive/reference/get_driving_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the OSM driving network — get_driving_network","text":"","code":"get_driving_network(osm, ex_d = exclude_highway_driving())  get_driving_network_major(osm, ex_d = exclude_highway_driving())"},{"path":"https://nptscot.github.io/osmactive/reference/get_driving_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the OSM driving network — get_driving_network","text":"osm OSM network object ex_d character string highway values exclude form value1|value2 etc","code":""},{"path":"https://nptscot.github.io/osmactive/reference/get_driving_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the OSM driving network — get_driving_network","text":"sf object OSM driving network","code":""},{"path":"https://nptscot.github.io/osmactive/reference/get_driving_network.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the OSM driving network — get_driving_network","text":"get_driving_network_major returns major roads.","code":""},{"path":"https://nptscot.github.io/osmactive/reference/get_travel_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the OSM network functions — get_travel_network","title":"Get the OSM network functions — get_travel_network","text":"Get OSM network functions","code":""},{"path":"https://nptscot.github.io/osmactive/reference/get_travel_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the OSM network functions — get_travel_network","text":"","code":"get_travel_network(place, extra_tags = et_active(), ...)"},{"path":"https://nptscot.github.io/osmactive/reference/get_travel_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the OSM network functions — get_travel_network","text":"place place name bounding box passed osmextract::oe_get() extra_tags vector extra tags included OSM extract ... Additional arguments passed osmextract::oe_get()","code":""},{"path":"https://nptscot.github.io/osmactive/reference/get_travel_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the OSM network functions — get_travel_network","text":"sf object OSM network","code":""},{"path":"https://nptscot.github.io/osmactive/reference/plot_osm_tmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a tmap object for visualizing the classified cycle network — plot_osm_tmap","title":"Create a tmap object for visualizing the classified cycle network — plot_osm_tmap","text":"Create tmap object visualizing classified cycle network","code":""},{"path":"https://nptscot.github.io/osmactive/reference/plot_osm_tmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a tmap object for visualizing the classified cycle network — plot_osm_tmap","text":"","code":"plot_osm_tmap(   cycle_network_classified,   popup.vars = c(\"name\", \"cycle_segregation\", \"distance_to_road\", \"maxspeed\", \"highway\",     \"other_tags\"),   lwd = 4,   palette = \"-PuBuGn\" )"},{"path":"https://nptscot.github.io/osmactive/reference/plot_osm_tmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a tmap object for visualizing the classified cycle network — plot_osm_tmap","text":"cycle_network_classified sf object classified cycle network popup.vars vector variables displayed popup lwd line width cycle network palette palette used cycle segregation levels","code":""},{"path":"https://nptscot.github.io/osmactive/reference/plot_osm_tmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a tmap object for visualizing the classified cycle network — plot_osm_tmap","text":"tmap object visualizing classified cycle network","code":""}]
