[{"path":"https://nptscot.github.io/osmactive/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Robin Lovelace Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://nptscot.github.io/osmactive/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Robin Lovelace. Author, maintainer. Joey Talbot. Author.","code":""},{"path":"https://nptscot.github.io/osmactive/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lovelace R, Talbot J (2024). osmactive: Extract Active Travel Infrastructure OpenStreetMap. R package version 0.0.0.9000, https://nptscot.github.io/osmactive/.","code":"@Manual{,   title = {osmactive: Extract Active Travel Infrastructure from OpenStreetMap},   author = {Robin Lovelace and Joey Talbot},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://nptscot.github.io/osmactive/}, }"},{"path":"https://nptscot.github.io/osmactive/index.html","id":"osmactive","dir":"","previous_headings":"","what":"Extract Active Travel Infrastructure from OpenStreetMap","title":"Extract Active Travel Infrastructure from OpenStreetMap","text":"goal osmactive provide functions, example datasets documentation extracting active travel infrastructure OpenStreetMap data. Install package :","code":"remotes::install_github(\"nptscot/osmactive\") library(osmactive)"},{"path":"https://nptscot.github.io/osmactive/index.html","id":"leeds-example","dir":"","previous_headings":"","what":"Leeds example","title":"Extract Active Travel Infrastructure from OpenStreetMap","text":"","code":"library(dplyr) library(tmap) leeds_zb = zonebuilder::zb_zone(\"Leeds\") leeds = leeds_zb |>   filter(circle_id == 1) osm = get_travel_network(\"Leeds\", boundary = leeds, boundary_type = \"clipsrc\") #> 0...10...20...30...40...50...60...70...80...90...100 - done. #> Reading layer `lines' from data source `/home/robin/data/osm/bbbike_Leeds.gpkg' using driver `GPKG' #> Simple feature collection with 4163 features and 31 fields #> Geometry type: MULTILINESTRING #> Dimension:     XY #> Bounding box:  xmin: -1.558963 ymin: 53.78843 xmax: -1.528622 ymax: 53.80639 #> Geodetic CRS:  WGS 84 cycle_network = get_cycling_network(osm) driving_network = get_driving_network_major(osm) cycle_network_with_distance = distance_to_road(cycle_network, driving_network) cycle_network_classified = classify_cycle_infrastructure(cycle_network_with_distance) m = plot_osm_tmap(cycle_network_classified) m"},{"path":"https://nptscot.github.io/osmactive/index.html","id":"edinburgh-example","dir":"","previous_headings":"","what":"Edinburgh example","title":"Extract Active Travel Infrastructure from OpenStreetMap","text":"Save interactive version map check results follows:","code":"edinburgh = zonebuilder::zb_zone(\"Edinburgh\") edinburgh_3km = edinburgh |>   # Change number in next line to change zone size:   filter(circle_id <= 2) |>   sf::st_union() osm = get_travel_network(\"Scotland\", boundary = edinburgh_3km, boundary_type = \"clipsrc\") #> 0...10...20...30...40...50...60...70...80...90...100 - done. #> Reading layer `lines' from data source  #>   `/home/robin/data/osm/geofabrik_scotland-latest.gpkg' using driver `GPKG' #> Simple feature collection with 44341 features and 31 fields #> Geometry type: MULTILINESTRING #> Dimension:     XY #> Bounding box:  xmin: -3.236391 ymin: 55.9264 xmax: -3.140354 ymax: 55.98029 #> Geodetic CRS:  WGS 84 cycle_network = get_cycling_network(osm) driving_network = get_driving_network_major(osm) cycle_network_with_distance = distance_to_road(cycle_network, driving_network) cycle_network_classified = classify_cycle_infrastructure(cycle_network_with_distance) m = plot_osm_tmap(cycle_network_classified) m"},{"path":"https://nptscot.github.io/osmactive/index.html","id":"lisbon-example","dir":"","previous_headings":"","what":"Lisbon example","title":"Extract Active Travel Infrastructure from OpenStreetMap","text":"","code":"lisbon = zonebuilder::zb_zone(\"Lisbon\") lisbon = sf::st_sf(   lisbon |> sf::st_drop_geometry() |> select(-centroid),   geometry = sf::st_geometry(lisbon) ) lisbon = lisbon |>   filter(circle_id == 1) u = \"https://github.com/U-Shift/SiteSelection/releases/download/0.1/CAOP_municipios.gpkg\" f = basename(f) if (!file.exists(f)) download.file(u, f) PTcities = sf::read_sf(f) # Portugal lisbon = PTcities |> filter(Concelho == \"Lisboa\") lisbon = lisbon |>   sf::st_convex_hull() f = list.files(\"~/data/osm\", pattern = \"portugal*.+pbf\", full.names = TRUE) osm = sf::read_sf(f, query = \"select * from lines where highway is not null\") osm = get_travel_network(\"Portugal\", boundary = lisbon, boundary_type = \"clipsrc\", force_vectortranslate = TRUE) list.files(\"~/data/osm\", pattern = \"portugal\") cycle_network = get_cycling_network(osm) driving_network = get_driving_network(osm) cycle_network_with_distance = distance_to_road(cycle_network, driving_network) lisbon_categorized = classify_cycle_infrastructure(cycle_network_with_distance) m = plot_osm_tmap(lisbon_categorized) m tmap_save(m, \"classify_cycle_infrastructure_lisbon.html\") browseURL(\"classify_cycle_infrastructure_lisbon.html\")"},{"path":"https://nptscot.github.io/osmactive/reference/classify_cycle_infrastructure.html","id":null,"dir":"Reference","previous_headings":"","what":"Segregation levels — classify_cycle_infrastructure","title":"Segregation levels — classify_cycle_infrastructure","text":"function classifies OSM ways cycle infrastructure type levels given dataset.","code":""},{"path":"https://nptscot.github.io/osmactive/reference/classify_cycle_infrastructure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Segregation levels — classify_cycle_infrastructure","text":"","code":"classify_cycle_infrastructure(   osm,   min_distance = 10,   classification_type = \"Scotland\" )"},{"path":"https://nptscot.github.io/osmactive/reference/classify_cycle_infrastructure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Segregation levels — classify_cycle_infrastructure","text":"osm input dataset segregation levels need calculated. min_distance minimum distance road cycleway considered -road. classification_type classification type used. Currently \"Scotland\" supported.","code":""},{"path":"https://nptscot.github.io/osmactive/reference/classify_cycle_infrastructure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Segregation levels — classify_cycle_infrastructure","text":"sf object new column cycle_segregation contains segregation levels.","code":""},{"path":"https://nptscot.github.io/osmactive/reference/classify_cycle_infrastructure.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Segregation levels — classify_cycle_infrastructure","text":"See wiki.openstreetmap.org/wiki/Key:cycleway taginfo.openstreetmap.org/keys/cycleway#values information cycleway values used classify cycle infrastructure. Currently, \"Scotland\" classification type supported. See Scottish Government's Cycling Design information.","code":""},{"path":"https://nptscot.github.io/osmactive/reference/classify_cycle_infrastructure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Segregation levels — classify_cycle_infrastructure","text":"","code":"library(tmap) #>  #> Attaching package: ‘tmap’ #> The following object is masked from ‘package:datasets’: #>  #>     rivers tmap_mode(\"plot\") #> tmap mode set to 'plot' osm = osm_edinburgh cycle_network = get_cycling_network(osm) driving_network = get_driving_network(osm) netd = distance_to_road(cycle_network, driving_network) netc = classify_cycle_infrastructure(netd) library(sf) #> Linking to GEOS 3.10.2, GDAL 3.4.1, PROJ 8.2.1; sf_use_s2() is TRUE plot(netc[\"cycle_segregation\"])  plot(netc[\"distance_to_road\"])"},{"path":"https://nptscot.github.io/osmactive/reference/distance_to_road.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate distance from route network segments to roads — distance_to_road","title":"Calculate distance from route network segments to roads — distance_to_road","text":"function approximates distance route network nearest road. first computing sf::st_point_on_surface route network segments calculating distance nearest road using geos::geos_distance function.","code":""},{"path":"https://nptscot.github.io/osmactive/reference/distance_to_road.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate distance from route network segments to roads — distance_to_road","text":"","code":"distance_to_road(rnet, roads)"},{"path":"https://nptscot.github.io/osmactive/reference/distance_to_road.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate distance from route network segments to roads — distance_to_road","text":"rnet route network distance road needs calculated. roads road network distance needs calculated.","code":""},{"path":"https://nptscot.github.io/osmactive/reference/distance_to_road.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate distance from route network segments to roads — distance_to_road","text":"sf object new column distance_to_road contains distance road.","code":""},{"path":"https://nptscot.github.io/osmactive/reference/distance_to_road.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate distance from route network segments to roads — distance_to_road","text":"","code":"osm = osm_edinburgh cycle_network = get_cycling_network(osm) driving_network = get_driving_network(osm) edinburgh_cycle_with_distance = distance_to_road(cycle_network, driving_network)"},{"path":"https://nptscot.github.io/osmactive/reference/et_active.html","id":null,"dir":"Reference","previous_headings":"","what":"This function returns OSM keys that are relevant for active travel — et_active","title":"This function returns OSM keys that are relevant for active travel — et_active","text":"function returns OSM keys relevant active travel","code":""},{"path":"https://nptscot.github.io/osmactive/reference/et_active.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function returns OSM keys that are relevant for active travel — et_active","text":"","code":"et_active()"},{"path":"https://nptscot.github.io/osmactive/reference/get_cycling_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the OSM cycling network — get_cycling_network","title":"Get the OSM cycling network — get_cycling_network","text":"Get OSM cycling network","code":""},{"path":"https://nptscot.github.io/osmactive/reference/get_cycling_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the OSM cycling network — get_cycling_network","text":"","code":"get_cycling_network(   osm,   ex_c = exclude_highway_cycling(),   ex_b = exclude_bicycle_cycling() )"},{"path":"https://nptscot.github.io/osmactive/reference/get_cycling_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the OSM cycling network — get_cycling_network","text":"osm OSM network object ex_c vector highway values exclude ex_b vector bicycle values exclude","code":""},{"path":"https://nptscot.github.io/osmactive/reference/get_cycling_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the OSM cycling network — get_cycling_network","text":"sf object OSM cycling network","code":""},{"path":"https://nptscot.github.io/osmactive/reference/get_driving_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the OSM driving network — get_driving_network","title":"Get the OSM driving network — get_driving_network","text":"function returns OSM driving network excluding certain highway values.","code":""},{"path":"https://nptscot.github.io/osmactive/reference/get_driving_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the OSM driving network — get_driving_network","text":"","code":"get_driving_network(osm, ex_d = exclude_highway_driving())  get_driving_network_major(   osm,   ex_d = exclude_highway_driving(),   pattern = \"motorway|trunk|primary|secondary|tertiary\" )"},{"path":"https://nptscot.github.io/osmactive/reference/get_driving_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the OSM driving network — get_driving_network","text":"osm OSM network object ex_d character string highway values exclude form value1|value2 etc pattern character string highway values define major roads form motorway|trunk|primary|secondary|tertiary","code":""},{"path":"https://nptscot.github.io/osmactive/reference/get_driving_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the OSM driving network — get_driving_network","text":"sf object OSM driving network","code":""},{"path":"https://nptscot.github.io/osmactive/reference/get_driving_network.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the OSM driving network — get_driving_network","text":"get_driving_network_major returns major roads.","code":""},{"path":"https://nptscot.github.io/osmactive/reference/get_travel_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the OSM network functions — get_travel_network","title":"Get the OSM network functions — get_travel_network","text":"Get OSM network functions","code":""},{"path":"https://nptscot.github.io/osmactive/reference/get_travel_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the OSM network functions — get_travel_network","text":"","code":"get_travel_network(   place,   extra_tags = et_active(),   columns_to_remove = c(\"waterway\", \"aerialway\", \"barrier\", \"manmade\"),   ... )"},{"path":"https://nptscot.github.io/osmactive/reference/get_travel_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the OSM network functions — get_travel_network","text":"place place name bounding box passed osmextract::oe_get() extra_tags vector extra tags included OSM extract columns_to_remove vector columns removed OSM network ... Additional arguments passed osmextract::oe_get()","code":""},{"path":"https://nptscot.github.io/osmactive/reference/get_travel_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the OSM network functions — get_travel_network","text":"sf object OSM network","code":""},{"path":"https://nptscot.github.io/osmactive/reference/osm_edinburgh.html","id":null,"dir":"Reference","previous_headings":"","what":"Data from edinburgh's OSM network — osm_edinburgh","title":"Data from edinburgh's OSM network — osm_edinburgh","text":"Data edinburgh's OSM network","code":""},{"path":"https://nptscot.github.io/osmactive/reference/osm_edinburgh.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data from edinburgh's OSM network — osm_edinburgh","text":"sf data frame","code":""},{"path":"https://nptscot.github.io/osmactive/reference/osm_edinburgh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data from edinburgh's OSM network — osm_edinburgh","text":"","code":"library(sf) names(osm_edinburgh) #> [1] \"osm_id\"     \"name\"       \"highway\"    \"cycleway\"   \"bicycle\"    #> [6] \"lanes\"      \"sidewalk\"   \"other_tags\" \"geometry\"   head(osm_edinburgh) #> Simple feature collection with 6 features and 8 fields #> Geometry type: MULTILINESTRING #> Dimension:     XY #> Bounding box:  xmin: -3.194737 ymin: 55.95514 xmax: -3.186586 ymax: 55.95921 #> Geodetic CRS:  WGS 84 #>      osm_id                   name     highway cycleway bicycle lanes sidewalk #> 71  3992791             York Place    tertiary     <NA>    <NA>     1     <NA> #> 185 4049896           Leith Street     primary     <NA>    <NA>     2     <NA> #> 197 4071161       Broughton Street   secondary     <NA>    <NA>     2     both #> 198 4071162          Dublin Street residential     <NA>    <NA>  <NA>     both #> 241 4084027 North St Andrew Street  pedestrian     <NA>    <NA>  <NA>     <NA> #> 242 4084028   North St Andrew Lane     service     <NA>    <NA>  <NA>     <NA> #>                                                                                               other_tags #> 71  \"embedded_rails\"=>\"tram\",\"sidewalk:left\"=>\"separate\",\"sidewalk:right\"=>\"no\",\"wikidata\"=>\"Q102108491\" #> 185                                               \"lit\"=>\"yes\",\"ref\"=>\"A900\",\"sidewalk:both\"=>\"separate\" #> 197                  \"incline\"=>\"up\",\"lit\"=>\"yes\",\"ref\"=>\"B901\",\"sidewalk:both:surface\"=>\"paving_stones\" #> 198                                                                         \"incline\"=>\"up\",\"lit\"=>\"yes\" #> 241                                                                           \"foot\"=>\"yes\",\"lit\"=>\"yes\" #> 242                                                                                                 <NA> #>                           geometry #> 71  MULTILINESTRING ((-3.187851... #> 185 MULTILINESTRING ((-3.186586... #> 197 MULTILINESTRING ((-3.190781... #> 198 MULTILINESTRING ((-3.194218... #> 241 MULTILINESTRING ((-3.192841... #> 242 MULTILINESTRING ((-3.194737... plot(osm_edinburgh)"},{"path":"https://nptscot.github.io/osmactive/reference/plot_osm_tmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a tmap object for visualizing the classified cycle network — plot_osm_tmap","title":"Create a tmap object for visualizing the classified cycle network — plot_osm_tmap","text":"Create tmap object visualizing classified cycle network","code":""},{"path":"https://nptscot.github.io/osmactive/reference/plot_osm_tmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a tmap object for visualizing the classified cycle network — plot_osm_tmap","text":"","code":"plot_osm_tmap(   cycle_network_classified,   popup.vars = c(\"name\", \"cycle_segregation\", \"distance_to_road\", \"maxspeed\", \"highway\",     \"other_tags\"),   lwd = 4,   palette = \"-PuBuGn\" )"},{"path":"https://nptscot.github.io/osmactive/reference/plot_osm_tmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a tmap object for visualizing the classified cycle network — plot_osm_tmap","text":"cycle_network_classified sf object classified cycle network popup.vars vector variables displayed popup lwd line width cycle network palette palette used cycle segregation levels","code":""},{"path":"https://nptscot.github.io/osmactive/reference/plot_osm_tmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a tmap object for visualizing the classified cycle network — plot_osm_tmap","text":"tmap object visualizing classified cycle network","code":""}]
